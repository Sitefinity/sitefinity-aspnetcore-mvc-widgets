document.addEventListener("DOMContentLoaded", (function () { var e, t = document.querySelector('[data-sf-role="sf-registration-container"]'), n = t.querySelector('[data-sf-role="form-container"]'), a = n.querySelector("form"), r = t.querySelector('[data-sf-role="error-message-container"]'), i = t.querySelector('[data-sf-role="success-registration-message-container"]'), o = t.querySelector('[data-sf-role="confirm-registration-message-container"]'), l = document.querySelector("[data-sf-visibility-hidden]"), s = l.dataset ? l.dataset.sfVisibilityHidden : null, u = document.querySelector("[data-sf-invalid]"), c = u.dataset && (e = u.dataset.sfInvalid) && "" !== e ? u.dataset.sfInvalid : null, d = c ? c.split(" ") : null, f = "data-sf-invalid"; a.addEventListener("submit", (function (e) { e.preventDefault(), g(a) && new Promise(((e, t) => { let n = new XMLHttpRequest; n.open("GET", "/sitefinity/anticsrf"), n.setRequestHeader("X-SF-ANTIFORGERY-REQUEST", "true"), n.responseType = "json", n.onload = function () { const t = n.response; if (null != t) { const n = t.Value; document.querySelectorAll("input[name = 'sf_antiforgery']").forEach((e => e.value = n)), e() } else e() }, n.onerror = function () { t() }, n.send() })).then((e => { g(a) && q(a, null, v, m) }), (e => { !function (e) { var t = document.querySelector('[data-sf-role="error-message-container"]'); t.innerText = e }("Antiforgery token retrieval failed") })) })); var v = function () { var e = n.querySelector("input[name='PostRegistrationAction']").value, t = n.querySelector("input[name='ActivationMethod']").value; if ("ViewMessage" === e) "AfterConfirmation" == t ? S() : y(); else if ("RedirectToPage" === e) { var a = n.querySelector("input[name='RedirectUrl']").value; R(a) } }, m = function (e, t) { r.innerText = e, T(r) }, y = function () { L(r), L(n), T(i) }, S = function () { L(n), T(o); var e = o.querySelector("input[name='ActivationLinkLabel']").value, t = o.querySelector('[data-sf-role="activation-link-message-container"]'), r = new FormData(a).get("Email"); t.innerText = e + " " + r; var i = o.querySelector('[data-sf-role="sendAgainLink"]'), l = o.querySelector("input[name='ResendConfirmationEmailUrl']").value; i.addEventListener("click", (function (e) { e.preventDefault(), q(a, l, p) })) }, q = function (e, t, n, a) { t = t || e.attributes.action.value; var r = { model: w(e) }; window.fetch(t, { method: "POST", body: JSON.stringify(r), headers: { "Content-Type": "application/json" } }).then((e => { var t = e.status; 0 === t || t >= 200 && t < 400 ? n && n() : e.json().then((e => { var n = e.error.message; a && a(n, t) })) })) }, p = function () { var e = o.querySelector('[data-sf-role="activation-link-message-container"]'), t = o.querySelector("input[name='SendAgainLabel']").value, n = new FormData(a).get("Email"); e.innerText = t.replace("{0}", n) }, g = function (e) { var t = !0; if (A(e), L(r), e.querySelectorAll("input[data-sf-role='required']").forEach((function (e) { e.value || (E(e), t = !1) })), !t) return r.innerText = n.querySelector("input[name='ValidationRequiredMessage']").value, T(r), t; var a = e.querySelector("input[name='Email']"); if (!h(a.value)) return r.innerText = n.querySelector("input[name='ValidationInvalidEmailMessage']").value, E(a), T(r), !1; var i = e.querySelectorAll("[type='password']"); return i[0].value !== i[1].value ? (r.innerText = n.querySelector("input[name='ValidationMismatchMessage']").value, E(i[1]), T(r), !1) : t }, w = function (e) { var t = {}, n = new FormData(e); for (var a of n.keys()) t[a] = n.get(a); return t }, E = function (e) { e && (d && e.classList.add(...d), e.setAttribute(f, "")) }, A = function (e) { e.querySelectorAll(`[${f}]`).forEach((function (e) { d && e.classList.remove(...d), e.removeAttribute(f) })) }, T = function (e) { e && (s ? e.classList.remove(s) : e.style.display = "") }, L = function (e) { e && (s ? e.classList.add(s) : e.style.display = "none") }, h = function (e) { return /^\w+([\.-]?\w+)*@\w+([\.-]?\w+)*(\.\w+)+$/.test(e) }, R = function (e) { window.location = e } }));
