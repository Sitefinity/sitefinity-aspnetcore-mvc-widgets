document.addEventListener("DOMContentLoaded", (function () { var e, t = document.querySelector("[data-sf-role='sf-change-password-container']"), n = document.querySelector("[data-sf-visibility-hidden]"), a = n.dataset ? n.dataset.sfVisibilityHidden : null, r = document.querySelector("[data-sf-invalid]"), o = r.dataset && (e = r.dataset.sfInvalid) && "" !== e ? r.dataset.sfInvalid : null, s = o ? o.split(" ") : null, i = "data-sf-invalid", u = t.querySelector("form"); u.addEventListener("submit", (function (e) { e.preventDefault(), d(u) && new Promise(((e, t) => { let n = new XMLHttpRequest; n.open("GET", "/sitefinity/anticsrf"), n.setRequestHeader("X-SF-ANTIFORGERY-REQUEST", "true"), n.responseType = "json", n.onload = function () { const t = n.response; if (null != t) { const n = t.Value; document.querySelectorAll("input[name = 'sf_antiforgery']").forEach((e => e.value = n)), e() } else e() }, n.onerror = function () { t() }, n.send() })).then((e => { if (d(u)) { var t = { model: c(u) }, n = u.attributes.action.value; window.fetch(n, { method: "POST", body: JSON.stringify(t), headers: { "Content-Type": "application/json" } }).then((e => { var t = e.status; 0 === t || t >= 200 && t < 400 ? (u.reset(), l()) : e.json().then((e => { var n = e.error.message; if (400 == t) var a = u.querySelector("input[name='NewPassword']"); else 403 == t && (a = u.querySelector("input[name='OldPassword']")); f(a), p(n, u) })) })) } }), (e => { !function (e) { document.querySelector('[data-sf-role="error-message-container"]').innerText = e }("Antiforgery token retrieval failed") })) })); var l = function () { var e = t.querySelector("input[name='postChangeAction']").value; if ("ViewAMessage" === e) { var n = t.querySelector("input[name='postChangeMessage']").value; m(n, u) } else if ("RedirectToPage" === e) { var a = t.querySelector("input[name='redirectUrl']").value; y(a) } }, c = function (e) { var t = {}, n = new FormData(e); for (var a of n.keys()) t[a] = n.get(a); return t }, d = function (e) { v(e); var n = e.querySelectorAll("input[data-sf-role='required']"), a = !0; if (n.forEach((function (e) { e.value || (f(e), a = !1) })), !a) { var r = t.querySelector("input[name='validationRequiredMessage']").value; return p(r, e), a } var o = e.querySelector("input[name='NewPassword']"), s = e.querySelector("input[name='RepeatPassword']"); return a && s.value !== o.value && (f(s), a = !1, r = t.querySelector("input[name='validationMismatchMessage']").value, p(r, e)), a }, f = function (e) { e && (s && e.classList.add(...s), e.setAttribute(i, "")) }, v = function (e) { e.querySelectorAll(`[${i}]`).forEach((function (e) { s && e.classList.remove(...s), e.removeAttribute(i) })) }, y = function (e) { window.location = e }, m = function (e, t) { g(t), q(e, t, "[data-sf-role='success-message-container']") }, p = function (e, t) { S(t), q(e, t, "[data-sf-role='error-message-container']") }, q = function (e, t, n) { var r = t.querySelector(n); r.innerText = e, a ? r.classList.remove(a) : r.style.display = "" }, S = function (e) { w(e, "[data-sf-role='success-message-container']") }, g = function (e) { w(e, "[data-sf-role='error-message-container']") }, w = function (e, t) { var n = e.querySelector(t); a ? n.classList.add(a) : n.style.display = "none" } }));
