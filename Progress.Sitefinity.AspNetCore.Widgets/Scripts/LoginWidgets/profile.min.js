document.addEventListener("DOMContentLoaded", (function () { var e = document.querySelector("input[name='ViewMode']").value, t = document.querySelector("[data-sf-visibility-hidden]"), r = t.dataset ? t.dataset.sfVisibilityHidden : null, a = document.querySelector('[data-sf-role="read-container"]'), n = document.querySelector('[data-sf-role="form-container"]'), o = document.querySelector('[data-sf-role="error-message-container"]'), i = document.querySelector('[data-sf-role="success-message-container"]'), l = n.querySelector("input[name='InvalidPhotoErrorMessage']").value, u = n.querySelector("input[name='InvalidPasswordErrorMessage']").value, c = "true" === n.querySelector("input[name='ConfirmEmailChangeRequest']").value.toLowerCase(), s = "true" === n.querySelector("input[name='ConfirmEmailChangeError']").value.toLowerCase(), d = function (e) { e && (r ? e.classList.remove(r) : e.style.display = "") }, f = function (e) { e && (r ? e.classList.add(r) : e.style.display = "none") }, m = function (e) { window.location = e }, v = function () { f(o), d(i) }, y = function () { f(o), f(i) }, p = function (e, t) { e && (t ? o.innerHTML = e : o.innerText = e), o.innerText && (f(i), d(o)) }; switch (e) { case "Edit": q(), d(n), f(a); break; case "Read": S(e), d(a), f(n); break; case "ReadEdit": S(e), q(), d(a), f(n) }function q(e) { var t, r = document.querySelector('[data-sf-role="form-container"]'), n = r.querySelector("form"), i = document.querySelector('[data-sf-role="edit-profile-upload-picture-input"]'), l = document.querySelector('[data-sf-role="sf-user-profile-avatar"]'), q = document.querySelector("[data-sf-invalid]"), S = q.dataset && (t = q.dataset.sfInvalid) && "" !== t ? q.dataset.sfInvalid : null, E = S ? S.split(" ") : null, w = "data-sf-invalid", b = !1, L = !1, A = r.querySelector("input[name='InvalidEmailErrorMessage']").value, R = r.querySelector("input[name='ValidationRequiredMessage']").value, T = r.querySelector("input[name='ActivationMethod']").value, k = document.querySelector('[data-sf-role="confirm-email-change-container"]'), C = "true" === k.querySelector('[data-sf-role="show-send-again-activation-link"]').value.toLowerCase(), M = k.querySelector("form"); n.addEventListener("submit", (function (e) { if (e.preventDefault(), y(), I(n)) { var t = r.querySelector("input[name='InitialEmail']").value, a = n.querySelector("input[name='Email']").value; if (b || (n.querySelector("input[name='Password']").value = ""), t != a && !b) return y(), f(document.querySelector('[data-sf-role="edit-profile-container"]')), d(document.querySelector('[data-sf-role="password-container"]')), b = !0, void (L = !0); h().then((e => { I(n) && D(n, null, F, j) }), (e => { p("Antiforgery token retrieval failed") })) } })), i.addEventListener("change", (function (e) { if (e.target.files && e.target.files[0]) { var t = new FileReader; t.onload = function (e) { l.src = e.target.result }, t.readAsDataURL(e.target.files[0]) } })); var I = function (e) { var t = !0; if (N(e), f(o), e.querySelectorAll("input[data-sf-role='required']").forEach((function (e) { e.value || (x(e), t = !1) })), !t) return p(R), t; var r = e.querySelector("input[name='Email']"); return P(r.value) ? !(i.files.length > 0 && !g(i.files[0])) && t : (x(r), p(A), !1) }, P = function (e) { return /^\w+([\.-]?\w+)*@\w+([\.-]?\w+)*(\.\w+)+$/.test(e) }, x = function (e) { e && (E && e.classList.add(...E), e.setAttribute(w, "")) }, N = function (e) { e.querySelectorAll(`[${w}]`).forEach((function (e) { E && e.classList.remove(...E), e.removeAttribute(w) })) }, D = function (e, t, a, n) { t = t || e.attributes.action.value; for (var o = new FormData, i = 0; i < e.elements.length; i++) { var l = e.elements[i]; "submit" !== l.type && ("file" !== l.type ? o.append(l.name, l.value) : o.append("image", l.files[0])) } window.fetch(t, { method: "POST", body: o }).then((e => { var t = e.status; 0 === t || t >= 200 && t < 400 ? a && a(e) : e.json().then((e => { var r = e.error.message, a = e.error.fieldsErrors; n && n(r, a, t) })) })).finally((() => { b && (r.querySelector("input[name=Password]").value = "", d(document.querySelector('[data-sf-role="edit-profile-container"]')), f(document.querySelector('[data-sf-role="password-container"]')), b = !1) })) }, F = function (e) { if (L && "AfterConfirmation" == T) f(document.querySelector('[data-sf-role="profile-container"]')), d(document.querySelector('[data-sf-role="confirm-email-change-container"]')); else switch (r.querySelector("input[name='PostUpdateAction']").value) { case "ViewMessage": !function (e) { e.json().then((e => { var t = e.value; r.querySelector("input[name='FirstName']").value = t.FirstName, r.querySelector("input[name='LastName']").value = t.LastName, r.querySelector("input[name='Email']").value = t.Email, r.querySelector("input[name='Nickname']").value = t.Nickname, r.querySelector("textarea[name='About']").value = t.About; var a = r.querySelector("img[data-sf-role='sf-user-profile-avatar']"); a.src = t.AvatarUrl, a.alt = t.Email, r.querySelector("input[name='InitialEmail']").value = t.Email })) }(e), f(o), v(); break; case "RedirectToPage": var t = r.querySelector("input[name='RedirectUrl']").value; m(t); break; case "SwitchToReadMode": f(r), d(a), m(window.location) } }, j = function (e, t, a) { 403 === a && (e = u); var n = []; e && n.push(e), t && Object.keys(t).forEach((e => { var a = r.querySelector("input[name='" + e + "']") ?? r.querySelector("textarea[name='" + e + "']") ?? r.querySelector("img[name='" + e + "']"); if (a) if (x(a), a.id) { var o = r.querySelector("label[for='" + a.id + "']").innerText; n.push(t[e].replace("{0}", o)) } else n.push(t[e]) })), p(n.join("<br />"), !0) }, O = function () { k.querySelector('[data-sf-role="confirm-email-change-title"] h2').innerText = k.querySelector('[data-sf-role="confirm-email-change-success-title"]').value, k.querySelector('[data-sf-role="confirm-email-change-message"]').innerText = k.querySelector('[data-sf-role="confirm-email-change-success-message"]').value, M.querySelector('[type="submit"]').value = k.querySelector('[data-sf-role="send-again-label"]').value }; if (c && "AfterConfirmation" == T) { if (s) return f(document.querySelector('[data-sf-role="profile-container"]')), d(k), void (C && (M.addEventListener("submit", (function (e) { e.preventDefault(), h().then((e => { D(M, null, O) }), (e => { p("Antiforgery token retrieval failed") })) })), d(M.querySelector('[type="submit"]')))); v() } } function S(e) { "ReadEdit" === e && document.querySelector('[data-sf-role="editProfileLink"]').addEventListener("click", (function (e) { e.preventDefault(), f(a), d(n) })) } function g(e) { var t = e.size, r = 26214400, a = n.querySelector('input[data-sf-role="sf-allowed-avatar-formats"]').value, o = e.name, i = o.substr(o.lastIndexOf(".")).toLowerCase(); return !(t > r || !a.split(",").map((e => e.trim())).includes(i)) || (p(l.replace("{0}", r).replace("{1}", a)), !1) } function h() { return new Promise(((e, t) => { let r = new XMLHttpRequest; r.open("GET", "/sitefinity/anticsrf"), r.setRequestHeader("X-SF-ANTIFORGERY-REQUEST", "true"), r.responseType = "json", r.onload = function () { const t = r.response; if (null != t) { const r = t.Value; document.querySelectorAll("input[name = 'sf_antiforgery']").forEach((e => e.value = r)), e() } else e() }, r.onerror = function () { t() }, r.send() })) } }));
