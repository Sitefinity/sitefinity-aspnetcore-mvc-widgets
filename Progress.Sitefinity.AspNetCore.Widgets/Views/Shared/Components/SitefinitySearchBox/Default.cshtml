@inject Progress.Sitefinity.AspNetCore.Web.IRenderContext renderContext;
@inject Progress.Sitefinity.AspNetCore.Web.IRequestContext requestContext;
@model Progress.Sitefinity.AspNetCore.Widgets.Models.Search.SearchBoxViewModel;


<environment include="Development">
    <script src="Scripts/SearchWidgets/search-box.js" section-name="Bottom"
        assembly-ref="Progress.Sitefinity.AspNetCore.Widgets"></script>
</environment>
<environment exclude="Development">
    <script src="Scripts/SearchWidgets/search-box.min.js" section-name="Bottom"
        assembly-ref="Progress.Sitefinity.AspNetCore.Widgets"></script>
</environment>

@{
    string classAttr = string.IsNullOrEmpty(@Model.CssClass) ? "position-relative" : string.Format("position-relative {0}", @Model.CssClass);
    bool disabled = @renderContext.IsEdit;
    var queryCollection = this.Context.Request.Query;
    var cultureParam = queryCollection[Progress.Sitefinity.RestSdk.QueryParamNames.Culture].ToString();
    string culture = !string.IsNullOrEmpty(cultureParam) ? cultureParam : @Model.Culture;
    string sort = queryCollection["orderBy"];
    <div class="@classAttr"
    data-sf-search-autocomplete-item-class="@Model.SearchAutocompleteItemClass"
    data-sf-visibility-hidden="@Model.VisibilityClasses[Progress.Sitefinity.AspNetCore.Configuration.VisibilityStyle.Hidden]"
    data-sf-active-class="@Model.ActiveClass">
        @{
            if (!string.IsNullOrEmpty(@Model.SearchIndex))
            {
                <div class="d-flex">
                    <input value="@queryCollection["searchQuery"]"
                           class="form-control" data-sf-role="search-box" data-sf-results-url="@Model.SearchResultsPageUrl"
                           data-sf-search-catalogue="@Model.SearchIndex" data-sf-scoring-setting="@Model.ScoringProfile"
                           data-sf-suggestions-length="@Model.SuggestionsTriggerCharCount" data-sf-site-id="@Model.SiteId"
                           data-sf-culture="@culture" data-sf-sort="@sort"
                           data-sf-suggestions-fields="@Model.SuggestionFields"
                           data-sf-results-all="@Model.ShowResultsForAllIndexedSites"
                           data-sf-service-path="@Model.WebServicePath" disabled="@disabled" type="text"
                           placeholder="@Model.SearchBoxPlaceholder"
                           @Html.BuildAttributes(Model.Attributes) />
                    <button data-sf-role="search-button" class="btn btn-primary ms-2 flex-shrink-0" disabled="@disabled">
                        @Model.SearchButtonLabel
                    </button>
                </div>

                if (@Model.SuggestionsTriggerCharCount != null && @Model.SuggestionsTriggerCharCount >= 2)
                {
                    <ul data-sf-role="search-box-autocomplete" class="border bg-body list-unstyled position-absolute d-none" role="listbox">
                    </ul>
                }
            }
        }
    </div>
}
