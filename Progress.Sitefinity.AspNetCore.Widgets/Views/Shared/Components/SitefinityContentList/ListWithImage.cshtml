@using Progress.Sitefinity.RestSdk.Dto;

@model Progress.Sitefinity.AspNetCore.Widgets.Models.ContentList.ContentListViewModel
@{
    var imageCss = Model.GetFieldCss("Image");
    var titleCss = Model.GetFieldCss("Title");
    var textCss = Model.GetFieldCss("Text");
    var wrapperCss = Model.GetFieldCss("Content list");
    string classAttr = string.IsNullOrEmpty(wrapperCss) ? null : wrapperCss;
}

<div class="@classAttr" @Html.BuildAttributes(Model.Attributes)>
    @{
        var first = Model.Items.FirstOrDefault();
    }
    @foreach (var item in Model.Items)
    {
        var image = Model.GetFirstRelatedMedia(item, "Image");
        var thumbnail = image != null ? image.GetThumbnail() : null;
        var title = Model.GetFieldValue<string>(item, "Title");
        var text = Model.GetFieldValue<string>(item, "Text");

        if (!item.Equals(first))
        {
            <hr>
        }

        <div class="d-flex">
            <div class="flex-shrink-0">
                @if (thumbnail != null)
                {
                    <img class="card-img-top @(imageCss)" src='@(thumbnail.Url)' title='@(image.Title)' />
                }
                else if (image != null)
                {
                    <img class="card-img-top @(imageCss)" src='@(image.Url)' alt='@(image.AlternativeText)' title='@(image.Title)' />
                }
            </div>
            <div class="flex-grow-1 ms-3">
                @if (title != null)
                {
                    classAttr = string.IsNullOrEmpty(titleCss) ? null : titleCss;
                    <h5 class="@classAttr">@Html.HtmlSanitize(title)</h5>
                }
                @if (text != null)
                {
                    classAttr = string.IsNullOrEmpty(textCss) ? null : textCss;
                    <p class="@classAttr">@Html.HtmlSanitize(text)</p>
                }

                @if (Model.RenderLinks)
                {
                    var itemUrl = Model.GetItemUrl(this.Context, item);
                    @if (itemUrl != null)
                    {
                        <a href="@itemUrl.ToString()" class="btn btn-primary">Learn more</a>
                    }
                }
            </div>
        </div>
    }

    @if (Model.Pager != null)
    {
        <div class="mt-2">
            @await Html.PartialAsync("ContentPager", Model.Pager)
        </div>
    }
</div>
